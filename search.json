[{"path":"https://mpff.github.io/dcsbm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Manuel Pfeuffer, Jan Nimczik Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://mpff.github.io/dcsbm/articles/benchmarks.html","id":"a--scaling-with-network-size","dir":"Articles","previous_headings":"Microbenchmarks for Development","what":"A. Scaling with network size","title":"Benchmarking results and comparision with other packages","text":"","code":"results <- bench::press(   Nsize = c(10, 25, 50, 75, 100),   {     G <- sample_ppm(Nsize, c=0.9, k=10, B=3)     G <- simplify(G)     G <- delete.vertices(G, degree(G) == 0)     p <- sample(1:3, Nsize, replace = TRUE)     bench::mark(       min_iterations = 5,       entropy = get_entropy(G, p),       mcmc_sweep = mcmc_single_sweep(G, p, 3),       agglomerative_merge = invisible(capture.output(dcsbm(G, n.moves=1, n.sweeps=0))),       check = FALSE     )   } ) results"},{"path":[]},{"path":"https://mpff.github.io/dcsbm/articles/benchmarks.html","id":"mcmc-sweeps","dir":"Articles","previous_headings":"Microbenchmarks for Development > B. Entropy Convergence Tests","what":"1. MCMC sweeps","title":"Benchmarking results and comparision with other packages","text":"","code":"# Initialize graph and a random starting partition G <- sample_ppm(100, c = 0.9, k = 10, B = 3, directed = TRUE, loops = TRUE)  # Number of mcmcm sweeps start_partition <- sample(1:3, size = 100, replace = TRUE)  # Perform Niter mcmc sweeps result <- mcmc_sweep(G, start_partition, 3, n.sweeps = 100)  # Visualize start/end partition and entropy delta. plot(G, vertex.color = start_partition, vertex.label = NA) plot(result$entropy_delta/length(E(G)), type = \"line\") plot(G, vertex.color = result$best_partition, vertex.label = NA)"},{"path":"https://mpff.github.io/dcsbm/articles/benchmarks.html","id":"agglomerative-merge","dir":"Articles","previous_headings":"Microbenchmarks for Development > B. Entropy Convergence Tests","what":"2. Agglomerative Merge","title":"Benchmarking results and comparision with other packages","text":"","code":"G <- sample_ppm(100, 0.9, 10, 3, directed = TRUE, loops = TRUE)  model <- dcsbm(G, n.sweeps = 1, verbose = FALSE)   plot(G, vertex.color = model$best_partition, vertex.label = NA)"},{"path":[]},{"path":"https://mpff.github.io/dcsbm/articles/benchmarks.html","id":"mcmc-sweeps-1","dir":"Articles","previous_headings":"Microbenchmarks for Development > C. Degree correction tests","what":"1. MCMC sweeps","title":"Benchmarking results and comparision with other packages","text":"","code":"# Initialize graph and a random starting partition G <- sample_dcppm(100, 0.9, 10, 3, k_coef = 2, directed = TRUE, loops = TRUE)  start_partition <- sample(1:3, size = 100, replace = TRUE)  result <- mcmc_sweep(G, start_partition, 3, n.sweeps = 100, dc = TRUE)  # Visualize start/end partition and entropy delta. plot(G, vertex.color = start_partition, vertex.label = NA) plot(result$entropy_delta/length(E(G)), type = \"line\") plot(G, vertex.color = result$best_partition, vertex.label = NA)"},{"path":"https://mpff.github.io/dcsbm/articles/benchmarks.html","id":"agglomerative-merge-1","dir":"Articles","previous_headings":"Microbenchmarks for Development > C. Degree correction tests","what":"2. Agglomerative merge","title":"Benchmarking results and comparision with other packages","text":"","code":"G <- sample_dcppm(100, 0.9, 10, 3, k_coef = 2, directed = TRUE, loops = TRUE)  model <- dcsbm(G, degree_correction = TRUE, n.sweeps = 5, verbose = FALSE)   plot(G, vertex.color = model$best_partition, vertex.label = NA, sub = \"Best partition\") plot(G, vertex.color = c(rep(1,34), rep(2,33), rep(3,33)), vertex.label = NA, sub = \"True partition\")"},{"path":"https://mpff.github.io/dcsbm/articles/introduction.html","id":"no-degree-correction","dir":"Articles","previous_headings":"","what":"1. No degree correction","title":"Introduction to the dcsbm package","text":"can simulate network clear block structure using planted partition model via sample_ppm. estimate SBM using dcsbm function.","code":"G <- sample_ppm(60, 0.9, 5, 3, directed = TRUE, loops = TRUE)  model <- dcsbm(G, n.sweeps = 1, verbose = FALSE)   plot(G, vertex.color = model$best_partition, vertex.label = NA, sub = \"Estimated partition\")"},{"path":"https://mpff.github.io/dcsbm/articles/introduction.html","id":"with-degree-correction","dir":"Articles","previous_headings":"","what":"2. With degree correction","title":"Introduction to the dcsbm package","text":"can simulate planted partition network additional degree variability inside block via sample_dcppm. estimate degree corrected SBM using dcsbm setting degree_correction = TRUE.","code":"G <- sample_dcppm(60, 0.9, 5, 3, k_coef = 2, directed = TRUE, loops = TRUE)  model <- dcsbm(G, degree_correction = TRUE, n.sweeps = 5, verbose = FALSE)   plot(G, vertex.color = model$best_partition, vertex.label = NA, sub = \"Estimated partition\") plot(G, vertex.color = c(rep(1,20), rep(2,20), rep(3,20)), vertex.label = NA, sub = \"True partition\")"},{"path":"https://mpff.github.io/dcsbm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Manuel Pfeuffer. Author, maintainer. Jan Nimczik. Author.","code":""},{"path":"https://mpff.github.io/dcsbm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pfeuffer M, Nimczik J (2023). dcsbm: Degree Corrected Stochastic Block Models. R package version 0.0.0.9002, https://mpff.github.io/dcsbm/.","code":"@Manual{,   title = {dcsbm: Degree Corrected Stochastic Block Models},   author = {Manuel Pfeuffer and Jan Nimczik},   year = {2023},   note = {R package version 0.0.0.9002},   url = {https://mpff.github.io/dcsbm/}, }"},{"path":"https://mpff.github.io/dcsbm/index.html","id":"dcsbm","dir":"","previous_headings":"","what":"Degree Corrected Stochastic Block Models","title":"Degree Corrected Stochastic Block Models","text":"goal dcsbm provide methods estimating two-way degree corrected stochastic block model directed, weighted graphs. Uses ‘igraph’ library https://igraph.org graph handling. See Peixoto (2014) <10.1103/PhysRevE.89.012804> details inference algorithm.","code":""},{"path":"https://mpff.github.io/dcsbm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Degree Corrected Stochastic Block Models","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"mpff/dcsbm\")"},{"path":"https://mpff.github.io/dcsbm/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Degree Corrected Stochastic Block Models","text":"basic example shows solve common problem:","code":"library(dcsbm)  # Generate graph by a planted partition model and estimate a degree-corrected SBM. g <- sample_dcppm(60, c=0.9, k=10, B=3, k_coef=1.5, directed=TRUE, loops=TRUE) m <- dcsbm(g, degree_correction=TRUE, n.sweeps=5, verbose=FALSE)  # Show model summary. summary(m) #> IGRAPH 62c9c14 D--- 60 1200 -- Planted partition model with degree variability #> + attr: name (g/c), loops (g/l) #>  #> Degree correction: two way #> Optimal number of blocks: 3  #>  #> Block transmission probabilities: #>        [,1]   [,2]   [,3] #> [1,] 0.9000 0.0350 0.0650 #> [2,] 0.0475 0.9025 0.0500 #> [3,] 0.0600 0.0425 0.8975 #>  #> Minimum Description Length (MDL) = 0.9688423  # Plot the resulting partition. plot(g, vertex.color = m$best_partition, vertex.label = NA, sub = \"Estimated partition\")"},{"path":"https://mpff.github.io/dcsbm/reference/H_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary entropy function — H_binary","title":"Binary entropy function — H_binary","text":"Binary entropy function","code":""},{"path":"https://mpff.github.io/dcsbm/reference/H_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary entropy function — H_binary","text":"","code":"H_binary(x, na.rm = FALSE)"},{"path":"https://mpff.github.io/dcsbm/reference/H_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary entropy function — H_binary","text":"x Numeric, vector matrix numbers 0 1. na.rm TRUE, replace NA values 0, instead failing.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/block_degree_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence of relative degrees per block. — block_degree_sequence","title":"Sequence of relative degrees per block. — block_degree_sequence","text":"Sequence relative degrees per block.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/block_degree_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence of relative degrees per block. — block_degree_sequence","text":"","code":"block_degree_sequence(graph, partition, n.blocks = NULL)"},{"path":"https://mpff.github.io/dcsbm/reference/block_degree_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence of relative degrees per block. — block_degree_sequence","text":"graph igraph graph. partition vector group id's node graph. n.blocks number groups. Inferred number individual group id's partition default.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/block_edge_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix of edge counts between blocks — block_edge_counts","title":"Matrix of edge counts between blocks — block_edge_counts","text":"Entries r, s give nubmer edges nodes blocks r s , convenience twice number r = s.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/block_edge_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix of edge counts between blocks — block_edge_counts","text":"","code":"block_edge_counts(graph, partition, n.blocks = NULL)"},{"path":"https://mpff.github.io/dcsbm/reference/block_edge_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix of edge counts between blocks — block_edge_counts","text":"graph igraph graph. partition vector group id's node graph. n.blocks number groups. Inferred number individual group id's partition default.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/block_edge_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create list of edges per block — block_edge_list","title":"Create list of edges per block — block_edge_list","text":"Create list edges per block","code":""},{"path":"https://mpff.github.io/dcsbm/reference/block_edge_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create list of edges per block — block_edge_list","text":"","code":"block_edge_list(G, p, B = NULL)"},{"path":"https://mpff.github.io/dcsbm/reference/block_edge_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create list of edges per block — block_edge_list","text":"G igraph graph. p Vector integer values giving block membership vertex B Number blocks.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/block_node_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Node counts for blocks — block_node_counts","title":"Node counts for blocks — block_node_counts","text":"Node counts blocks","code":""},{"path":"https://mpff.github.io/dcsbm/reference/block_node_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Node counts for blocks — block_node_counts","text":"","code":"block_node_counts(partition, n.blocks = NULL)"},{"path":"https://mpff.github.io/dcsbm/reference/block_node_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Node counts for blocks — block_node_counts","text":"partition vector group id's node graph. n.blocks number groups. Inferred number individual group id's partition default.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/block_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a sequence of block numbers — block_sequence","title":"Build a sequence of block numbers — block_sequence","text":"B_i+1 = B_i/sigma.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/block_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a sequence of block numbers — block_sequence","text":"","code":"block_sequence(Bmax, Bmin = 1, sigma = 1.5)"},{"path":"https://mpff.github.io/dcsbm/reference/block_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a sequence of block numbers — block_sequence","text":"Bmax Start value Bmin End value sigma Division factor.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/block_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a sequence of block numbers — block_sequence","text":"vector block numbers decreasing order.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/calculate_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"Description length of a block partition — calculate_dl","title":"Description length of a block partition — calculate_dl","text":"Calculate description length associated current block partition type degree correction.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/calculate_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Description length of a block partition — calculate_dl","text":"","code":"calculate_dl(graph, partition, degree_correction = FALSE)"},{"path":"https://mpff.github.io/dcsbm/reference/calculate_dl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Description length of a block partition — calculate_dl","text":"graph igraph graph. partition Vector integer values giving block membership vertex degree_correction Whether use degree correction calculation.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/calculate_dl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Description length of a block partition — calculate_dl","text":"Description length value (numeric) given graph partition.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/check_partition.html","id":null,"dir":"Reference","previous_headings":"","what":"Check partition — check_partition","title":"Check partition — check_partition","text":"Renumber partitions 1 number unique blocks (B).","code":""},{"path":"https://mpff.github.io/dcsbm/reference/check_partition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check partition — check_partition","text":"","code":"check_partition(partition)"},{"path":"https://mpff.github.io/dcsbm/reference/check_partition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check partition — check_partition","text":"partition vector group id's node graph.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/check_partition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check partition — check_partition","text":"vector group id's going 1 B.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/collapse_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an agglomerative merge step — collapse_step","title":"Perform an agglomerative merge step — collapse_step","text":"Collapse n.merges blocks together via agglomerative merging. block, n.moves merges proposed using move proposal algorithm used MCMC sweeps. move proposals ranked n.merges moves performed accounting duplicates. merge, n.sweeps MCMC sweeps performed stabilize resulting partition.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/collapse_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an agglomerative merge step — collapse_step","text":"","code":"collapse_step(   graph,   partition,   degree_correction = FALSE,   n.merges = 1,   n.moves = 10,   n.sweeps = 0,   eps = 0.1,   beta = 1,   verbose = TRUE )"},{"path":"https://mpff.github.io/dcsbm/reference/collapse_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an agglomerative merge step — collapse_step","text":"graph igraph graph. partition vector integers giving block partition nodes. degree_correction Whether use degree correction. n.merges Number block merges collapse step. n.moves Number merge trials per block. n.sweeps Number sweeps block merge. eps (optional) number controlling randomness moves. beta (optional) number controlling greediness moves. verbose Whether print verbose output console.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/dcsbm.html","id":null,"dir":"Reference","previous_headings":"","what":"dcsbm: Estimate degree corrected stochastic block models — dcsbm","title":"dcsbm: Estimate degree corrected stochastic block models — dcsbm","text":"'dcsbm' packages provides methods estimating two-way degree corrected stochastic block model directed, weighted graphs. Depends 'igraph' library https://igraph.org graph handling. See Peixoto (2014) <10.1103/PhysRevE.89.012804> details inference algorithm. Estimate stochastic block model without degree correction. Works directed multigraphs self-loops.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/dcsbm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dcsbm: Estimate degree corrected stochastic block models — dcsbm","text":"","code":"dcsbm(   graph,   degree_correction = FALSE,   n.blocks = c(1, Inf),   n.moves = 10,   n.sweeps = 0,   verbose = TRUE,   control = list(sigma = 1.5, eps = 0.1, beta = 1, start_partition = NULL) )"},{"path":"https://mpff.github.io/dcsbm/reference/dcsbm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dcsbm: Estimate degree corrected stochastic block models — dcsbm","text":"graph igraph graph. degree_correction Whether use degree correction. n.blocks maximum minimum number blocks consider estimation. n.moves Number merge trials per block (see collapse_step). n.sweeps Number sweeps block merge (see collapse_step). verbose Wether print verbose output estimation. control List parameters inference algorithm.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/dcsbm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dcsbm: Estimate degree corrected stochastic block models — dcsbm","text":"list object including estimated SBM parameters block transmission probabilities degree correction parameters Entries: B_opt Optimal number blocks minimum_description_length Description length best partition block_transmission_probs B x B matrix block transmission probabilities degree_parameters list one two degree parameters per node depending whether graph undirected directed best_partition optimal estimated partition iterations information collapse iteration","code":""},{"path":"https://mpff.github.io/dcsbm/reference/dcsbm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dcsbm: Estimate degree corrected stochastic block models — dcsbm","text":"Estimate degree corrected stochastic block model: dcsbm Sample (weighted) graph planted partition model: sample_ppm Sample (weighted) graph degree variable planted partition model: sample_dcppm","code":""},{"path":"https://mpff.github.io/dcsbm/reference/dcsbm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dcsbm: Estimate degree corrected stochastic block models — dcsbm","text":"","code":"g <- sample_ppm(60, 0.9, 10, 3) model <- dcsbm(g) #>  #> GRAPH: Undirected - Multi graph - With loops (N = 60, E = 597) #>  #> Estimating a traditional SBM via agglomerative merging. #>  #> Using a random starting partition with 60 blocks. #>  #> Merging from 60 to 1 block(s)... #>    |                                                        |                                               |   0%  [ 60 -> 40 blocks ]   |                                                        |=                                              |   2%   |                                                        |==                                             |   3%   |                                                        |==                                             |   5%   |                                                        |===                                            |   7%   |                                                        |====                                           |   8%   |                                                        |=====                                          |  10%   |                                                        |=====                                          |  12%   |                                                        |======                                         |  13%   |                                                        |=======                                        |  15%   |                                                        |========                                       |  17%   |                                                        |=========                                      |  18%   |                                                        |=========                                      |  20%   |                                                        |==========                                     |  22%   |                                                        |===========                                    |  23%   |                                                        |============                                   |  25%   |                                                        |=============                                  |  27%   |                                                        |=============                                  |  28%   |                                                        |==============                                 |  30%   |                                                        |===============                                |  32%   |                                                        |================                               |  33%   |                                                        |================                               |  35%   |                                                        |=================                              |  37%   |                                                        |==================                             |  38%   |                                                        |===================                            |  40%   |                                                        |====================                           |  42%   |                                                        |====================                           |  43%   |                                                        |=====================                          |  45%   |                                                        |======================                         |  47%   |                                                        |=======================                        |  48%   |                                                        |========================                       |  50%   |                                                        |========================                       |  52%   |                                                        |=========================                      |  53%   |                                                        |==========================                     |  55%   |                                                        |===========================                    |  57%   |                                                        |===========================                    |  58%   |                                                        |============================                   |  60%   |                                                        |=============================                  |  62%   |                                                        |==============================                 |  63%   |                                                        |===============================                |  65%   |                                                        |===============================                |  67%   |                                                        |================================               |  68%   |                                                        |=================================              |  70%   |                                                        |==================================             |  72%   |                                                        |==================================             |  73%   |                                                        |===================================            |  75%   |                                                        |====================================           |  77%   |                                                        |=====================================          |  78%   |                                                        |======================================         |  80%   |                                                        |======================================         |  82%   |                                                        |=======================================        |  83%   |                                                        |========================================       |  85%   |                                                        |=========================================      |  87%   |                                                        |==========================================     |  88%   |                                                        |==========================================     |  90%   |                                                        |===========================================    |  92%   |                                                        |============================================   |  93%   |                                                        |=============================================  |  95%   |                                                        |=============================================  |  97%   |                                                        |============================================== |  98%   |                                                        |===============================================| 100% #>    |                                                        |                                               |   0%  [ 40 -> 27 blocks ]   |                                                        |=                                              |   2%   |                                                        |==                                             |   5%   |                                                        |====                                           |   8%   |                                                        |=====                                          |  10%   |                                                        |======                                         |  12%   |                                                        |=======                                        |  15%   |                                                        |========                                       |  18%   |                                                        |=========                                      |  20%   |                                                        |===========                                    |  22%   |                                                        |============                                   |  25%   |                                                        |=============                                  |  28%   |                                                        |==============                                 |  30%   |                                                        |===============                                |  32%   |                                                        |================                               |  35%   |                                                        |==================                             |  38%   |                                                        |===================                            |  40%   |                                                        |====================                           |  42%   |                                                        |=====================                          |  45%   |                                                        |======================                         |  48%   |                                                        |========================                       |  50%   |                                                        |=========================                      |  52%   |                                                        |==========================                     |  55%   |                                                        |===========================                    |  58%   |                                                        |============================                   |  60%   |                                                        |=============================                  |  62%   |                                                        |===============================                |  65%   |                                                        |================================               |  68%   |                                                        |=================================              |  70%   |                                                        |==================================             |  72%   |                                                        |===================================            |  75%   |                                                        |====================================           |  78%   |                                                        |======================================         |  80%   |                                                        |=======================================        |  82%   |                                                        |========================================       |  85%   |                                                        |=========================================      |  88%   |                                                        |==========================================     |  90%   |                                                        |===========================================    |  92%   |                                                        |=============================================  |  95%   |                                                        |============================================== |  98%   |                                                        |===============================================| 100% #>    |                                                        |                                               |   0%  [ 27 -> 18 blocks ]   |                                                        |==                                             |   4%   |                                                        |===                                            |   7%   |                                                        |=====                                          |  11%   |                                                        |=======                                        |  15%   |                                                        |=========                                      |  19%   |                                                        |==========                                     |  22%   |                                                        |============                                   |  26%   |                                                        |==============                                 |  30%   |                                                        |================                               |  33%   |                                                        |=================                              |  37%   |                                                        |===================                            |  41%   |                                                        |=====================                          |  44%   |                                                        |=======================                        |  48%   |                                                        |========================                       |  52%   |                                                        |==========================                     |  56%   |                                                        |============================                   |  59%   |                                                        |==============================                 |  63%   |                                                        |===============================                |  67%   |                                                        |=================================              |  70%   |                                                        |===================================            |  74%   |                                                        |=====================================          |  78%   |                                                        |======================================         |  81%   |                                                        |========================================       |  85%   |                                                        |==========================================     |  89%   |                                                        |============================================   |  93%   |                                                        |=============================================  |  96%   |                                                        |===============================================| 100% #>    |                                                        |                                               |   0%  [ 18 -> 12 blocks ]   |                                                        |===                                            |   6%   |                                                        |=====                                          |  11%   |                                                        |========                                       |  17%   |                                                        |==========                                     |  22%   |                                                        |=============                                  |  28%   |                                                        |================                               |  33%   |                                                        |==================                             |  39%   |                                                        |=====================                          |  44%   |                                                        |========================                       |  50%   |                                                        |==========================                     |  56%   |                                                        |=============================                  |  61%   |                                                        |===============================                |  67%   |                                                        |==================================             |  72%   |                                                        |=====================================          |  78%   |                                                        |=======================================        |  83%   |                                                        |==========================================     |  89%   |                                                        |============================================   |  94%   |                                                        |===============================================| 100% #>    |                                                         |                                                |   0%  [ 12 -> 8 blocks ]   |                                                         |====                                            |   8%   |                                                         |========                                        |  17%   |                                                         |============                                    |  25%   |                                                         |================                                |  33%   |                                                         |====================                            |  42%   |                                                         |========================                        |  50%   |                                                         |============================                    |  58%   |                                                         |================================                |  67%   |                                                         |====================================            |  75%   |                                                         |========================================        |  83%   |                                                         |============================================    |  92%   |                                                         |================================================| 100% #>    |                                                          |                                                 |   0%  [ 8 -> 5 blocks ]   |                                                          |======                                           |  12%   |                                                          |============                                     |  25%   |                                                          |==================                               |  38%   |                                                          |========================                         |  50%   |                                                          |===============================                  |  62%   |                                                          |=====================================            |  75%   |                                                          |===========================================      |  88%   |                                                          |=================================================| 100% #>    |                                                          |                                                 |   0%  [ 5 -> 3 blocks ]   |                                                          |==========                                       |  20%   |                                                          |====================                             |  40%   |                                                          |=============================                    |  60%   |                                                          |=======================================          |  80%   |                                                          |=================================================| 100% #>    |                                                          |                                                 |   0%  [ 3 -> 2 blocks ]   |                                                          |================                                 |  33%   |                                                          |=================================                |  67%   |                                                          |=================================================| 100% #>    |                                                          |                                                 |   0%  [ 2 -> 1 blocks ]   |                                                          |========================                         |  50%   |                                                          |=================================================| 100% #> Minimal description length for 3 blocks (DL/E = 1.88). #>  #> Merging from 5 to 2 block(s)... #>    |                                                          |                                                 |   0%  [ 5 -> 4 blocks ]   |                                                          |==========                                       |  20%   |                                                          |====================                             |  40%   |                                                          |=============================                    |  60%   |                                                          |=======================================          |  80%   |                                                          |=================================================| 100% #>    |                                                          |                                                 |   0%  [ 4 -> 3 blocks ]   |                                                          |============                                     |  25%   |                                                          |========================                         |  50%   |                                                          |=====================================            |  75%   |                                                          |=================================================| 100% #>    |                                                          |                                                 |   0%  [ 3 -> 2 blocks ]   |                                                          |================                                 |  33%   |                                                          |=================================                |  67%   |                                                          |=================================================| 100% #> Minimal description length for 3 blocks (DL/E = 1.88). #>  #> Converged at 3 blocks (DL/E = 1.88). #>"},{"path":"https://mpff.github.io/dcsbm/reference/entropy_corrected.html","id":null,"dir":"Reference","previous_headings":"","what":"Entropy (degree corrected) — entropy_corrected","title":"Entropy (degree corrected) — entropy_corrected","text":"Calculate degree corrected entropy associated current graph block partition.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/entropy_corrected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Entropy (degree corrected) — entropy_corrected","text":"","code":"entropy_corrected(E, d, directed = FALSE)"},{"path":"https://mpff.github.io/dcsbm/reference/entropy_corrected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Entropy (degree corrected) — entropy_corrected","text":"E Integer matrix edge counts associated current partition. d List one two integers vector node degrees. directed Whether graph directed","code":""},{"path":"https://mpff.github.io/dcsbm/reference/entropy_corrected.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Entropy (degree corrected) — entropy_corrected","text":"Undirected case: $$   S_c = - E - \\sum_k N_k \\ln k! - \\frac{1}{2} \\sum_{rs} e_{rs} \\ln\\left(\\frac{e_{rs}}{e_r e_s}\\right) $$","code":""},{"path":"https://mpff.github.io/dcsbm/reference/entropy_trad.html","id":null,"dir":"Reference","previous_headings":"","what":"Traditional Entropy (no degree correction) — entropy_trad","title":"Traditional Entropy (no degree correction) — entropy_trad","text":"Calculate traditional entropy associated current graph block partition.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/entropy_trad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Traditional Entropy (no degree correction) — entropy_trad","text":"","code":"entropy_trad(E, n, directed = FALSE, simple = TRUE)"},{"path":"https://mpff.github.io/dcsbm/reference/entropy_trad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Traditional Entropy (no degree correction) — entropy_trad","text":"E Integer matrix edge counts associated current partition n Integer vector node counts associated current partition directed Whether graph directed simple Whether graph simple.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/entropy_trad.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Traditional Entropy (no degree correction) — entropy_trad","text":"$$S_t = \\frac{1}{2} \\sum_{rs} n_r n_s H_b\\left(\\frac{e_{rs}}{n_r n_s}\\right)$$","code":""},{"path":"https://mpff.github.io/dcsbm/reference/get_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Entropy of a block partition — get_entropy","title":"Entropy of a block partition — get_entropy","text":"Calculate entropy associated current block partition type degree correction.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/get_entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Entropy of a block partition — get_entropy","text":"","code":"get_entropy(graph, partition, degree_correction = FALSE)"},{"path":"https://mpff.github.io/dcsbm/reference/get_entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Entropy of a block partition — get_entropy","text":"graph igraph graph. partition Vector integer values giving block membership vertex degree_correction Whether account degree variability.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/get_entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Entropy of a block partition — get_entropy","text":"Entropy value (numeric) given graph partition.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/get_proposal_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate entropy delta of the SBM before and after the proposed move and\nthe ratio of the probabilities of moving to the proposed block before the move and\nmoving back to the original block after the move. — get_proposal_results","title":"Calculate entropy delta of the SBM before and after the proposed move and\nthe ratio of the probabilities of moving to the proposed block before the move and\nmoving back to the original block after the move. — get_proposal_results","text":"Calculate entropy delta SBM proposed move ratio probabilities moving proposed block move moving back original block move.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/get_proposal_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate entropy delta of the SBM before and after the proposed move and\nthe ratio of the probabilities of moving to the proposed block before the move and\nmoving back to the original block after the move. — get_proposal_results","text":"","code":"get_proposal_results(   curr_v,   proposed_new_block,   old_entropy,   G,   old_partition,   block.edges,   eps = 0.1,   beta = 1,   dc = FALSE )"},{"path":"https://mpff.github.io/dcsbm/reference/get_proposal_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate entropy delta of the SBM before and after the proposed move and\nthe ratio of the probabilities of moving to the proposed block before the move and\nmoving back to the original block after the move. — get_proposal_results","text":"curr_v node graph. proposed_new_block integer giving proposed block id. old_entropy number giving pre move entropy G igraph graph. old_partition Vector integer values giving block membership vertex pre move. block.edges list incident edge ids per block eps (optional) number controlling randomness moves. beta (optional) number controlling greediness moves. dc Whether use degree correction.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/get_proposal_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate entropy delta of the SBM before and after the proposed move and\nthe ratio of the probabilities of moving to the proposed block before the move and\nmoving back to the original block after the move. — get_proposal_results","text":"new group membership vertex.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/get_transmission_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a matrix of transmission probabilities for given graph and partition — get_transmission_probs","title":"Build a matrix of transmission probabilities for given graph and partition — get_transmission_probs","text":"Build matrix transmission probabilities given graph partition","code":""},{"path":"https://mpff.github.io/dcsbm/reference/get_transmission_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a matrix of transmission probabilities for given graph and partition — get_transmission_probs","text":"","code":"get_transmission_probs(graph, partition)"},{"path":"https://mpff.github.io/dcsbm/reference/get_transmission_probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a matrix of transmission probabilities for given graph and partition — get_transmission_probs","text":"graph igraph graph. partition Vector integer values giving block membership vertex","code":""},{"path":"https://mpff.github.io/dcsbm/reference/get_transmission_probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a matrix of transmission probabilities for given graph and partition — get_transmission_probs","text":"B x B matrix giving transmission probabilities block, entry [,j] indiciates transmission probability going block block j.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/h_func.html","id":null,"dir":"Reference","previous_headings":"","what":"Mathematical function used description length calculation — h_func","title":"Mathematical function used description length calculation — h_func","text":"Mathematical function used description length calculation","code":""},{"path":"https://mpff.github.io/dcsbm/reference/h_func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mathematical function used description length calculation — h_func","text":"","code":"h_func(x)"},{"path":"https://mpff.github.io/dcsbm/reference/h_func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mathematical function used description length calculation — h_func","text":"x number.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/h_func.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mathematical function used description length calculation — h_func","text":"value h(x)","code":""},{"path":"https://mpff.github.io/dcsbm/reference/mcmc_single_sweep.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a single MCMC sweep over nodes — mcmc_single_sweep","title":"Run a single MCMC sweep over nodes — mcmc_single_sweep","text":"Runs single MCMC sweep across nodes (algorithm details see Piexoto, 2018). node given chance move blocks stay current block nodes processed random order.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/mcmc_single_sweep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a single MCMC sweep over nodes — mcmc_single_sweep","text":"","code":"mcmc_single_sweep(G, p, B, dc = FALSE, eps = 0.1, beta = 1)"},{"path":"https://mpff.github.io/dcsbm/reference/mcmc_single_sweep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a single MCMC sweep over nodes — mcmc_single_sweep","text":"G igraph graph. p Vector integer values giving block membership vertex B Number blocks. dc Use degree correcting version? eps (optional) number controlling randomness moves. beta (optional) number controlling greediness moves.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/mcmc_single_sweep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a single MCMC sweep over nodes — mcmc_single_sweep","text":"list object including partition state last move, well partition state lowest entropy.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/mcmc_sweep.html","id":null,"dir":"Reference","previous_headings":"","what":"Run multiple MCMC sweep overs nodes — mcmc_sweep","title":"Run multiple MCMC sweep overs nodes — mcmc_sweep","text":"Runs n.sweeps MCMC sweep across nodes (algorithm details see Piexoto, 2014). node given chance move blocks stay current block nodes processed random order sweep.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/mcmc_sweep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run multiple MCMC sweep overs nodes — mcmc_sweep","text":"","code":"mcmc_sweep(G, p, B, dc = FALSE, n.sweeps = 1, eps = 0.1, beta = 1)"},{"path":"https://mpff.github.io/dcsbm/reference/mcmc_sweep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run multiple MCMC sweep overs nodes — mcmc_sweep","text":"G igraph graph. p Vector integer values giving initial block membership vertex B Number blocks. dc Whether use degree correction. n.sweeps Number sweeps run. eps (optional) number controlling randomness moves. beta (optional) number controlling greediness moves.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/mcmc_sweep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run multiple MCMC sweep overs nodes — mcmc_sweep","text":"list object including partition state last move, well partition state lowest entropy.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/propose_move.html","id":null,"dir":"Reference","previous_headings":"","what":"A single move proposal during an MCMC sweep — propose_move","title":"A single move proposal during an MCMC sweep — propose_move","text":"single move proposal MCMC sweep","code":""},{"path":"https://mpff.github.io/dcsbm/reference/propose_move.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A single move proposal during an MCMC sweep — propose_move","text":"","code":"propose_move(curr_v, G, p, block.edges, eps = 1)"},{"path":"https://mpff.github.io/dcsbm/reference/propose_move.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A single move proposal during an MCMC sweep — propose_move","text":"curr_v node graph. G igraph graph. p Vector integer values giving block membership vertex block.edges list incident edge ids per block eps (optional) number controlling randomness moves.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/propose_move.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A single move proposal during an MCMC sweep — propose_move","text":"new group membership vertex.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/resample.html","id":null,"dir":"Reference","previous_headings":"","what":"Safer resample — resample","title":"Safer resample — resample","text":"Safer resample","code":""},{"path":"https://mpff.github.io/dcsbm/reference/resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safer resample — resample","text":"","code":"resample(x, ...)"},{"path":"https://mpff.github.io/dcsbm/reference/resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safer resample — resample","text":"x Numeric vector resample. ... arguments sample.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/sample_at_least_once.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample at least once with replacement\nSee https://stackoverflow.com/a/26350427/10042003. — sample_at_least_once","title":"Sample at least once with replacement\nSee https://stackoverflow.com/a/26350427/10042003. — sample_at_least_once","text":"Sample least replacement See https://stackoverflow.com//26350427/10042003.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/sample_at_least_once.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample at least once with replacement\nSee https://stackoverflow.com/a/26350427/10042003. — sample_at_least_once","text":"","code":"sample_at_least_once(x, size, prob = NULL)"},{"path":"https://mpff.github.io/dcsbm/reference/sample_at_least_once.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample at least once with replacement\nSee https://stackoverflow.com/a/26350427/10042003. — sample_at_least_once","text":"x numeric vector sample. size non-negative integer giving number items choose. prob vector probability weights obtaining elements vector sampled.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/sample_at_least_once.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample at least once with replacement\nSee https://stackoverflow.com/a/26350427/10042003. — sample_at_least_once","text":"vector length size elements drawn x every element x occurs least size larger length(x).","code":""},{"path":"https://mpff.github.io/dcsbm/reference/sample_dcppm.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample planted partition model with degree variability (Piexoto 2020) — sample_dcppm","title":"Sample planted partition model with degree variability (Piexoto 2020) — sample_dcppm","text":"function samples graphs stochastic block model building block adjacency matrix Parameters N, k, B c accounting exponential degree sequence inside block controlled k_coef.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/sample_dcppm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample planted partition model with degree variability (Piexoto 2020) — sample_dcppm","text":"","code":"sample_dcppm(N, c, k, B, k_coef = 0, directed = FALSE, loops = FALSE)"},{"path":"https://mpff.github.io/dcsbm/reference/sample_dcppm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample planted partition model with degree variability (Piexoto 2020) — sample_dcppm","text":"N Number vertices graph. c number 0 1 controlling k average degree vertex. B number blocks. k_coef number describing degree variability within block. value 0 means vertices expected degree.#' directed Logical scalar, whether generate directed graph. loops Logical scalar, whether self-loops allowed graph.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/sample_dcppm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample planted partition model with degree variability (Piexoto 2020) — sample_dcppm","text":"igraph graph.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/sample_dcppm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample planted partition model with degree variability (Piexoto 2020) — sample_dcppm","text":"","code":"## Three groups with only a few connection between groups G <- sample_dcppm(300, c=0.9, k=10, B=3, k_coef=2) p <- c(rep(1,100), rep(2, 200), rep(3, 300)) plot(G, vertex.label=NA, vertex.color=p)"},{"path":"https://mpff.github.io/dcsbm/reference/sample_ppm.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample planted partition model (Piexoto 2014) — sample_ppm","title":"Sample planted partition model (Piexoto 2014) — sample_ppm","text":"Sampling planted partition model Piexoto 2014.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/sample_ppm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample planted partition model (Piexoto 2014) — sample_ppm","text":"","code":"sample_ppm(N, c, k, B, directed = FALSE, loops = FALSE)"},{"path":"https://mpff.github.io/dcsbm/reference/sample_ppm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample planted partition model (Piexoto 2014) — sample_ppm","text":"N Number vertices graph. c number 0 1 controlling k average degree vertex. B number blocks. directed Logical scalar, whether generate directed graph. loops Logical scalar, whether self-loops allowed graph.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/sample_ppm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample planted partition model (Piexoto 2014) — sample_ppm","text":"igraph graph.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/sample_ppm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample planted partition model (Piexoto 2014) — sample_ppm","text":"function samples graphs stochastic block model building block adjacency matrix Parameters N, k, B c.","code":""},{"path":"https://mpff.github.io/dcsbm/reference/sample_ppm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample planted partition model (Piexoto 2014) — sample_ppm","text":"","code":"## Three groups with only a few connection between groups G <- sample_ppm(300, c=0.9, k=10, B=3) p <- c(rep(1,100), rep(2, 200), rep(3, 300)) plot(G, vertex.label=NA, vertex.color=p)"},{"path":"https://mpff.github.io/dcsbm/reference/swap_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap the block membership of a vertex — swap_blocks","title":"Swap the block membership of a vertex — swap_blocks","text":"Swap block membership vertex","code":""},{"path":"https://mpff.github.io/dcsbm/reference/swap_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap the block membership of a vertex — swap_blocks","text":"","code":"swap_blocks(p, curr_v, proposed_new_block)"},{"path":"https://mpff.github.io/dcsbm/reference/swap_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap the block membership of a vertex — swap_blocks","text":"p Vector integer values giving block membership vertex curr_v vertex id proposed_new_block block id","code":""},{"path":"https://mpff.github.io/dcsbm/reference/update_block_edge_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create list of edges per block — update_block_edge_list","title":"Create list of edges per block — update_block_edge_list","text":"Create list edges per block","code":""},{"path":"https://mpff.github.io/dcsbm/reference/update_block_edge_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create list of edges per block — update_block_edge_list","text":"","code":"update_block_edge_list(block.edges, v, G, new.b, old.b)"},{"path":"https://mpff.github.io/dcsbm/reference/update_block_edge_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create list of edges per block — update_block_edge_list","text":"block.edges ... v vertex id G igraph graph. new.b ... old.b ...","code":""},{"path":"https://mpff.github.io/dcsbm/reference/update_block_edge_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create list of edges per block — update_block_edge_list","text":"new block.edges list.","code":""}]
